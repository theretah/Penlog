@page "{searchString?}"
@using Penlog.Utilities
@model Penlog.Pages.SearchModel
<div class="container">
    @*<div class="row">
            <div class="col"></div>
            <div class="col">
                <form id="searchForm">
                    <div class="input-group mb-3">
                        <input id="searchBox" type="search" asp-for="SearchString" class="form-control" placeholder="Search for posts, categories">
                        <input type="submit" value="Search" class="input-group-text bt btn-primary" id="basic-addon1" />
                    </div>
                </form>
            </div>
            <div class="col"></div>
        </div>*@

    <h3 class="text-secondary">Browse posts, categories, users</h3>
    @if (!string.IsNullOrEmpty(Model.SearchString))
    {
        if (Model.Posts.Count() != 0)
        {
            <div class="row mt-3">
                <h3>Posts</h3>
                <div class="container px-0">
                    <div class="col-9 mx-0">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="row">
                                @await Component.InvokeAsync("Post", new { postId = post.Id })
                            </div>
                        }
                    </div>
                    <div class="col-3">
                    </div>
                </div>
            </div>
        }
        if (Model.Categories.Count() != 0)
        {
            <div class="row mt-3">
                <h3>Categories</h3>
                @foreach (var category in Model.Categories)
                {
                    <h5>@category.Title</h5>
                }
            </div>
        }
    }
</div>